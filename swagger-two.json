{
  "swagger": "2.0",
  "info": {
    "title": "Emerald API",
    "description": "Documentation automatically generated by the <b>swagger-autogen<b> module",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint get a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Telephone subscriber.."
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Disposable filter.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "User found."
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint get a user.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Disposable filter.",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID Telephone subscriber..",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "User found."
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to add user.",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to put user.",
        "parameters": [
          {
            "name": "putUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to put user.",
        "parameters": [
          {
            "name": "deleteUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully deleted!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Emediong Edet"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "type": "object",
          "properties": {
            "father": {
              "type": "string",
              "example": "Henry Edet"
            },
            "mother": {
              "type": "string",
              "example": "Justina Edet"
            }
          }
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "Brigham Young University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "AddUser": {
    "$name": "Emediong Edet",
    "$age": 29,
    "about": ""
  }
}